//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_Inserting(global::LightSwitchApplication.Contacts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_Inserted(global::LightSwitchApplication.Contacts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_Updating(global::LightSwitchApplication.Contacts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_Updated(global::LightSwitchApplication.Contacts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_Deleting(global::LightSwitchApplication.Contacts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_Deleted(global::LightSwitchApplication.Contacts entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_Validate(global::LightSwitchApplication.Contacts entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_Inserting(global::LightSwitchApplication.ContactTypes entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_Inserted(global::LightSwitchApplication.ContactTypes entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_Updating(global::LightSwitchApplication.ContactTypes entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_Updated(global::LightSwitchApplication.ContactTypes entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_Deleting(global::LightSwitchApplication.ContactTypes entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_Deleted(global::LightSwitchApplication.ContactTypes entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_Validate(global::LightSwitchApplication.ContactTypes entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_Inserting(global::LightSwitchApplication.Countries entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_Inserted(global::LightSwitchApplication.Countries entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_Updating(global::LightSwitchApplication.Countries entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_Updated(global::LightSwitchApplication.Countries entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_Deleting(global::LightSwitchApplication.Countries entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_Deleted(global::LightSwitchApplication.Countries entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_Validate(global::LightSwitchApplication.Countries entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_Inserting(global::LightSwitchApplication.Prisoner entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_Inserted(global::LightSwitchApplication.Prisoner entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_Updating(global::LightSwitchApplication.Prisoner entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_Updated(global::LightSwitchApplication.Prisoner entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_Deleting(global::LightSwitchApplication.Prisoner entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_Deleted(global::LightSwitchApplication.Prisoner entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_Validate(global::LightSwitchApplication.Prisoner entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Contacts> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contacts> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Contacts> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contacts> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Contacts> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contacts> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactsSet_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ContactTypes> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ContactTypes> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ContactTypes> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ContactTypes> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ContactTypes> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ContactTypes> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactTypesSet_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Countries> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Countries> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Countries> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Countries> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Countries> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Countries> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CountriesSet_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Prisoner> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Prisoner> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_SingleOrDefault_Executing(global::System.Nullable<int> ContactId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> ContactId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Prisoner> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_SingleOrDefault_Executed(global::System.Nullable<int> ContactId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Prisoner> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> ContactId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Prisoner> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Prisoner> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prisoners_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchByLastName_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchByLastName_Executing(string LastName);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchByLastName_PreprocessQuery(string LastName, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Contacts> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchByLastName_Executed(string LastName, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contacts> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SearchByLastName_ExecuteFailed(string LastName, global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contacts>
                __ContactsSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contacts>(
                    "ContactsSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_Validate);
            private static bool __ContactsSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ContactsSet_CanInsert(ref result);
                return result;
            }
            private static bool __ContactsSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ContactsSet_CanUpdate(ref result);
                return result;
            }
            private static bool __ContactsSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ContactsSet_CanDelete(ref result);
                return result;
            }
            private static bool __ContactsSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ContactsSet_CanRead(ref result);
                return result;
            }
            private static void __ContactsSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contacts e)
            {
                d.ContactsSet_Inserting(e);
            }
            private static void __ContactsSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contacts e)
            {
                d.ContactsSet_Inserted(e);
            }
            private static void __ContactsSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contacts e)
            {
                d.ContactsSet_Updating(e);
            }
            private static void __ContactsSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contacts e)
            {
                d.ContactsSet_Updated(e);
            }
            private static void __ContactsSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contacts e)
            {
                d.ContactsSet_Deleting(e);
            }
            private static void __ContactsSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contacts e)
            {
                d.ContactsSet_Deleted(e);
            }
            private static void __ContactsSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Contacts e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ContactsSet_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ContactTypes>
                __ContactTypesSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ContactTypes>(
                    "ContactTypesSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_Validate);
            private static bool __ContactTypesSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ContactTypesSet_CanInsert(ref result);
                return result;
            }
            private static bool __ContactTypesSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ContactTypesSet_CanUpdate(ref result);
                return result;
            }
            private static bool __ContactTypesSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ContactTypesSet_CanDelete(ref result);
                return result;
            }
            private static bool __ContactTypesSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ContactTypesSet_CanRead(ref result);
                return result;
            }
            private static void __ContactTypesSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ContactTypes e)
            {
                d.ContactTypesSet_Inserting(e);
            }
            private static void __ContactTypesSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ContactTypes e)
            {
                d.ContactTypesSet_Inserted(e);
            }
            private static void __ContactTypesSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ContactTypes e)
            {
                d.ContactTypesSet_Updating(e);
            }
            private static void __ContactTypesSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ContactTypes e)
            {
                d.ContactTypesSet_Updated(e);
            }
            private static void __ContactTypesSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ContactTypes e)
            {
                d.ContactTypesSet_Deleting(e);
            }
            private static void __ContactTypesSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ContactTypes e)
            {
                d.ContactTypesSet_Deleted(e);
            }
            private static void __ContactTypesSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ContactTypes e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ContactTypesSet_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Countries>
                __CountriesSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Countries>(
                    "CountriesSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_Validate);
            private static bool __CountriesSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CountriesSet_CanInsert(ref result);
                return result;
            }
            private static bool __CountriesSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CountriesSet_CanUpdate(ref result);
                return result;
            }
            private static bool __CountriesSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CountriesSet_CanDelete(ref result);
                return result;
            }
            private static bool __CountriesSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CountriesSet_CanRead(ref result);
                return result;
            }
            private static void __CountriesSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Countries e)
            {
                d.CountriesSet_Inserting(e);
            }
            private static void __CountriesSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Countries e)
            {
                d.CountriesSet_Inserted(e);
            }
            private static void __CountriesSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Countries e)
            {
                d.CountriesSet_Updating(e);
            }
            private static void __CountriesSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Countries e)
            {
                d.CountriesSet_Updated(e);
            }
            private static void __CountriesSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Countries e)
            {
                d.CountriesSet_Deleting(e);
            }
            private static void __CountriesSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Countries e)
            {
                d.CountriesSet_Deleted(e);
            }
            private static void __CountriesSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Countries e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CountriesSet_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Prisoner>
                __PrisonersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Prisoner>(
                    "Prisoners",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_Validate);
            private static bool __Prisoners_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Prisoners_CanInsert(ref result);
                return result;
            }
            private static bool __Prisoners_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Prisoners_CanUpdate(ref result);
                return result;
            }
            private static bool __Prisoners_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Prisoners_CanDelete(ref result);
                return result;
            }
            private static bool __Prisoners_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Prisoners_CanRead(ref result);
                return result;
            }
            private static void __Prisoners_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Prisoner e)
            {
                d.Prisoners_Inserting(e);
            }
            private static void __Prisoners_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Prisoner e)
            {
                d.Prisoners_Inserted(e);
            }
            private static void __Prisoners_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Prisoner e)
            {
                d.Prisoners_Updating(e);
            }
            private static void __Prisoners_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Prisoner e)
            {
                d.Prisoners_Updated(e);
            }
            private static void __Prisoners_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Prisoner e)
            {
                d.Prisoners_Deleting(e);
            }
            private static void __Prisoners_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Prisoner e)
            {
                d.Prisoners_Deleted(e);
            }
            private static void __Prisoners_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Prisoner e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Prisoners_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contacts>
                __ContactsSet_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contacts>(
                    "ContactsSet_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_Single_PreprocessQuery);
            private static bool __ContactsSet_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ContactsSet_Single_CanExecute(ref r);
                return r;
            }
            private static void __ContactsSet_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactsSet_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ContactsSet_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactsSet_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contacts>)args[1]);
            }
            private static void __ContactsSet_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ContactsSet_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ContactsSet_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Contacts> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Contacts>)args[1];
                d.ContactsSet_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contacts>
                __ContactsSet_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contacts>(
                    "ContactsSet_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_SingleOrDefault_PreprocessQuery);
            private static bool __ContactsSet_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ContactsSet_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __ContactsSet_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactsSet_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ContactsSet_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactsSet_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contacts>)args[1]);
            }
            private static void __ContactsSet_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ContactsSet_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ContactsSet_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Contacts> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Contacts>)args[1];
                d.ContactsSet_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contacts>
                __ContactsSet_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contacts>(
                    "ContactsSet_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactsSet_All_PreprocessQuery);
            private static bool __ContactsSet_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ContactsSet_All_CanExecute(ref r);
                return r;
            }
            private static void __ContactsSet_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactsSet_All_Executing();
            }
            private static void __ContactsSet_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactsSet_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contacts>)args[0]);
            }
            private static void __ContactsSet_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ContactsSet_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ContactsSet_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Contacts> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Contacts>)args[0];
                d.ContactsSet_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ContactTypes>
                __ContactTypesSet_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ContactTypes>(
                    "ContactTypesSet_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_Single_PreprocessQuery);
            private static bool __ContactTypesSet_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ContactTypesSet_Single_CanExecute(ref r);
                return r;
            }
            private static void __ContactTypesSet_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactTypesSet_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ContactTypesSet_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactTypesSet_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ContactTypes>)args[1]);
            }
            private static void __ContactTypesSet_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ContactTypesSet_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ContactTypesSet_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ContactTypes> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ContactTypes>)args[1];
                d.ContactTypesSet_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ContactTypes>
                __ContactTypesSet_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ContactTypes>(
                    "ContactTypesSet_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_SingleOrDefault_PreprocessQuery);
            private static bool __ContactTypesSet_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ContactTypesSet_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __ContactTypesSet_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactTypesSet_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __ContactTypesSet_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactTypesSet_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ContactTypes>)args[1]);
            }
            private static void __ContactTypesSet_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ContactTypesSet_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ContactTypesSet_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ContactTypes> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ContactTypes>)args[1];
                d.ContactTypesSet_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ContactTypes>
                __ContactTypesSet_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ContactTypes>(
                    "ContactTypesSet_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ContactTypesSet_All_PreprocessQuery);
            private static bool __ContactTypesSet_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.ContactTypesSet_All_CanExecute(ref r);
                return r;
            }
            private static void __ContactTypesSet_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactTypesSet_All_Executing();
            }
            private static void __ContactTypesSet_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.ContactTypesSet_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ContactTypes>)args[0]);
            }
            private static void __ContactTypesSet_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.ContactTypesSet_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ContactTypesSet_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ContactTypes> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ContactTypes>)args[0];
                d.ContactTypesSet_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Countries>
                __CountriesSet_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Countries>(
                    "CountriesSet_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_Single_PreprocessQuery);
            private static bool __CountriesSet_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CountriesSet_Single_CanExecute(ref r);
                return r;
            }
            private static void __CountriesSet_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CountriesSet_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __CountriesSet_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CountriesSet_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Countries>)args[1]);
            }
            private static void __CountriesSet_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CountriesSet_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __CountriesSet_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Countries> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Countries>)args[1];
                d.CountriesSet_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Countries>
                __CountriesSet_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Countries>(
                    "CountriesSet_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_SingleOrDefault_PreprocessQuery);
            private static bool __CountriesSet_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CountriesSet_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __CountriesSet_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CountriesSet_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __CountriesSet_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CountriesSet_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Countries>)args[1]);
            }
            private static void __CountriesSet_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CountriesSet_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __CountriesSet_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Countries> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Countries>)args[1];
                d.CountriesSet_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Countries>
                __CountriesSet_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Countries>(
                    "CountriesSet_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CountriesSet_All_PreprocessQuery);
            private static bool __CountriesSet_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.CountriesSet_All_CanExecute(ref r);
                return r;
            }
            private static void __CountriesSet_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CountriesSet_All_Executing();
            }
            private static void __CountriesSet_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.CountriesSet_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Countries>)args[0]);
            }
            private static void __CountriesSet_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.CountriesSet_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __CountriesSet_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Countries> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Countries>)args[0];
                d.CountriesSet_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Prisoner>
                __Prisoners_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Prisoner>(
                    "Prisoners_Single",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_Single_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_Single_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_Single_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_Single_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_Single_PreprocessQuery);
            private static bool __Prisoners_Single_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Prisoners_Single_CanExecute(ref r);
                return r;
            }
            private static void __Prisoners_Single_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Prisoners_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Prisoners_Single_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Prisoners_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Prisoner>)args[1]);
            }
            private static void __Prisoners_Single_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Prisoners_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Prisoners_Single_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Prisoner> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Prisoner>)args[1];
                d.Prisoners_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Prisoner>
                __Prisoners_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Prisoner>(
                    "Prisoners_SingleOrDefault",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_SingleOrDefault_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_SingleOrDefault_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_SingleOrDefault_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_SingleOrDefault_PreprocessQuery);
            private static bool __Prisoners_SingleOrDefault_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Prisoners_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Prisoners_SingleOrDefault_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Prisoners_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Prisoners_SingleOrDefault_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Prisoners_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Prisoner>)args[1]);
            }
            private static void __Prisoners_SingleOrDefault_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Prisoners_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Prisoners_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Prisoner> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Prisoner>)args[1];
                d.Prisoners_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Prisoner>
                __Prisoners_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Prisoner>(
                    "Prisoners_All",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_All_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_All_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_All_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_All_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Prisoners_All_PreprocessQuery);
            private static bool __Prisoners_All_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.Prisoners_All_CanExecute(ref r);
                return r;
            }
            private static void __Prisoners_All_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Prisoners_All_Executing();
            }
            private static void __Prisoners_All_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.Prisoners_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Prisoner>)args[0]);
            }
            private static void __Prisoners_All_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.Prisoners_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Prisoners_All_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Prisoner> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Prisoner>)args[0];
                d.Prisoners_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contacts>
                __SearchByLastNameEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Contacts>(
                    "SearchByLastName",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchByLastName_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchByLastName_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchByLastName_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchByLastName_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SearchByLastName_PreprocessQuery);
            private static bool __SearchByLastName_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SearchByLastName_CanExecute(ref r);
                return r;
            }
            private static void __SearchByLastName_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SearchByLastName_Executing((string)args[0]);
            }
            private static void __SearchByLastName_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SearchByLastName_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contacts>)args[1]);
            }
            private static void __SearchByLastName_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SearchByLastName_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __SearchByLastName_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Contacts> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Contacts>)args[1];
                d.SearchByLastName_PreprocessQuery((string)args[0], ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    #endregion
}
