

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Prison : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Prison entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Prison()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Prison(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Prison> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Prison.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prison_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prison_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Id);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MailName
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.MailName);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.MailName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MailName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MailName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MailName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address1
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Address1);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Address1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address2
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Address2);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Address2, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address2_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Address3
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Address3);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Address3, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address3_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address3_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Address3_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Town
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Town);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Town, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Town_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Town_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Town_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string County
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.County);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.County, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void County_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void County_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void County_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Postcode
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Postcode);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Postcode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Postcode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Postcode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Postcode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> MalePrisonersHeld
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.MalePrisonersHeld);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.MalePrisonersHeld, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MalePrisonersHeld_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MalePrisonersHeld_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MalePrisonersHeld_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> FemalePrisonersHeld
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.FemalePrisonersHeld);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.FemalePrisonersHeld, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FemalePrisonersHeld_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FemalePrisonersHeld_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FemalePrisonersHeld_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> JuvenilePrisonersHeld
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.JuvenilePrisonersHeld);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.JuvenilePrisonersHeld, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JuvenilePrisonersHeld_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JuvenilePrisonersHeld_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void JuvenilePrisonersHeld_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> YoungOffendersHeld
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.YoungOffendersHeld);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.YoungOffendersHeld, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YoungOffendersHeld_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YoungOffendersHeld_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void YoungOffendersHeld_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> AdultPrisonersHeld
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.AdultPrisonersHeld);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.AdultPrisonersHeld, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AdultPrisonersHeld_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AdultPrisonersHeld_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AdultPrisonersHeld_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Cat
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Cat);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Cat, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cat_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cat_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Cat_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Ptype
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Ptype);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Ptype, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Ptype_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Ptype_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Ptype_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string VolunteersNotes
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.VolunteersNotes);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.VolunteersNotes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VolunteersNotes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VolunteersNotes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VolunteersNotes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Notes
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Notes);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Notes, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Notes_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Governor
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Governor);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Governor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Governor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Governor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Governor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Telephone
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Telephone);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Telephone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Telephone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Tag
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Tag);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Tag, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tag_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tag_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tag_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> InclInNLAddressList
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.InclInNLAddressList);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.InclInNLAddressList, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InclInNLAddressList_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InclInNLAddressList_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InclInNLAddressList_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DesignationNewsletter
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.DesignationNewsletter);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.DesignationNewsletter, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DesignationNewsletter_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DesignationNewsletter_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DesignationNewsletter_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContactForNewsletter
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.ContactForNewsletter);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.ContactForNewsletter, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactForNewsletter_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactForNewsletter_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactForNewsletter_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContactPosition
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.ContactPosition);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.ContactPosition, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactPosition_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactPosition_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactPosition_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContactPhone
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.ContactPhone);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.ContactPhone, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactPhone_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactPhone_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactPhone_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ContactFax
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.ContactFax);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.ContactFax, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactFax_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactFax_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContactFax_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.c_Class> Classes
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Classes);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.c_Class> ClassesQuery
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetQuery(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Classes);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Contact> Contacts
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Contacts);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Contact> ContactsQuery
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetQuery(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Contacts);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Country Country1
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Country1);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Country1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Country1_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.LocationType LocationType
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.LocationType);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.LocationType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.NLAddressOrderType NLAddressOrderType
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.NLAddressOrderType);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.NLAddressOrderType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NLAddressOrderType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NLAddressOrderType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NLAddressOrderType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.PrisonSex PrisonSex
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.PrisonSex);
            }
            set
            {
                global::LightSwitchApplication.Prison.DetailsClass.SetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.PrisonSex, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrisonSex_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrisonSex_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PrisonSex_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.WorkshopPrison> WorkshopPrisons
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetValue(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.WorkshopPrisons);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.WorkshopPrison> WorkshopPrisonsQuery
        {
            get
            {
                return global::LightSwitchApplication.Prison.DetailsClass.GetQuery(this, global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.WorkshopPrisons);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Prison,
                global::LightSwitchApplication.Prison.DetailsClass,
                global::LightSwitchApplication.Prison.DetailsClass.IImplementation,
                global::LightSwitchApplication.Prison.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass>.Entry
                __PrisonEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass>.Entry(
                    global::LightSwitchApplication.Prison.DetailsClass.__Prison_CreateNew,
                    global::LightSwitchApplication.Prison.DetailsClass.__Prison_Created,
                    global::LightSwitchApplication.Prison.DetailsClass.__Prison_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Prison __Prison_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Prison> es)
            {
                return new global::LightSwitchApplication.Prison(es);
            }
            private static void __Prison_Created(global::LightSwitchApplication.Prison e)
            {
                e.Prison_Created();
            }
            private static bool __Prison_AllowSaveWithErrors(global::LightSwitchApplication.Prison e)
            {
                bool result = false;
                e.Prison_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Prison.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> MailName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.MailName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> Address1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Address1) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> Address2
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Address2) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> Address3
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Address3) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> Town
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Town) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> County
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.County) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> Postcode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Postcode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>> MalePrisonersHeld
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.MalePrisonersHeld) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>> FemalePrisonersHeld
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.FemalePrisonersHeld) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>> JuvenilePrisonersHeld
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.JuvenilePrisonersHeld) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>> YoungOffendersHeld
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.YoungOffendersHeld) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>> AdultPrisonersHeld
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.AdultPrisonersHeld) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> Cat
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Cat) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> Ptype
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Ptype) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> VolunteersNotes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.VolunteersNotes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> Notes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Notes) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> Governor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Governor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> Telephone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Telephone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> Tag
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Tag) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>> InclInNLAddressList
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.InclInNLAddressList) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> DesignationNewsletter
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.DesignationNewsletter) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> ContactForNewsletter
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.ContactForNewsletter) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> ContactPosition
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.ContactPosition) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> ContactPhone
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.ContactPhone) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string> ContactFax
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.ContactFax) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.c_Class> Classes
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Classes) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.c_Class>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.Contact> Contacts
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Contacts) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.Contact>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.Country> Country1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Country1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.Country>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.LocationType> LocationType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.LocationType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.LocationType>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.NLAddressOrderType> NLAddressOrderType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.NLAddressOrderType) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.NLAddressOrderType>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.PrisonSex> PrisonSex
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.PrisonSex) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.PrisonSex>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.WorkshopPrison> WorkshopPrisons
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.WorkshopPrisons) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.WorkshopPrison>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; }
                new string Name { get; set; }
                new string MailName { get; set; }
                new string Address1 { get; set; }
                new string Address2 { get; set; }
                new string Address3 { get; set; }
                new string Town { get; set; }
                new string County { get; set; }
                new string Postcode { get; set; }
                new global::System.Nullable<bool> MalePrisonersHeld { get; set; }
                new global::System.Nullable<bool> FemalePrisonersHeld { get; set; }
                new global::System.Nullable<bool> JuvenilePrisonersHeld { get; set; }
                new global::System.Nullable<bool> YoungOffendersHeld { get; set; }
                new global::System.Nullable<bool> AdultPrisonersHeld { get; set; }
                new string Cat { get; set; }
                new string Ptype { get; set; }
                new string VolunteersNotes { get; set; }
                new string Notes { get; set; }
                new string Governor { get; set; }
                new string Telephone { get; set; }
                new string Tag { get; set; }
                new global::System.Nullable<bool> InclInNLAddressList { get; set; }
                new string DesignationNewsletter { get; set; }
                new string ContactForNewsletter { get; set; }
                new string ContactPosition { get; set; }
                new string ContactPhone { get; set; }
                new string ContactFax { get; set; }
                new global::System.Collections.IEnumerable Classes { get; }
                new global::System.Collections.IEnumerable Contacts { get; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Country1 { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation LocationType { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation NLAddressOrderType { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation PrisonSex { get; set; }
                new global::System.Collections.IEnumerable WorkshopPrisons { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, int>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    MailName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "MailName",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._MailName_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._MailName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._MailName_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._MailName_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._MailName_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._MailName_OnValueChanged);
                private static void _MailName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._MailName, sf);
                }
                private static bool _MailName_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.MailName_IsReadOnly(ref result);
                    return result;
                }
                private static void _MailName_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MailName_Validate(r);
                }
                private static string _MailName_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.MailName;
                }
                private static void _MailName_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MailName = v;
                }
                private static void _MailName_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.MailName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    Address1 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "Address1",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address1_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address1_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address1_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address1_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address1_OnValueChanged);
                private static void _Address1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Address1, sf);
                }
                private static bool _Address1_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Address1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address1_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address1_Validate(r);
                }
                private static string _Address1_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Address1;
                }
                private static void _Address1_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address1 = v;
                }
                private static void _Address1_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Address1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    Address2 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "Address2",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address2_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address2_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address2_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address2_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address2_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address2_OnValueChanged);
                private static void _Address2_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Address2, sf);
                }
                private static bool _Address2_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Address2_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address2_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address2_Validate(r);
                }
                private static string _Address2_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Address2;
                }
                private static void _Address2_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address2 = v;
                }
                private static void _Address2_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Address2_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    Address3 = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "Address3",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address3_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address3_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address3_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address3_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address3_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Address3_OnValueChanged);
                private static void _Address3_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Address3, sf);
                }
                private static bool _Address3_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Address3_IsReadOnly(ref result);
                    return result;
                }
                private static void _Address3_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Address3_Validate(r);
                }
                private static string _Address3_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Address3;
                }
                private static void _Address3_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Address3 = v;
                }
                private static void _Address3_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Address3_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    Town = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "Town",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Town_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Town_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Town_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Town_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Town_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Town_OnValueChanged);
                private static void _Town_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Town, sf);
                }
                private static bool _Town_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Town_IsReadOnly(ref result);
                    return result;
                }
                private static void _Town_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Town_Validate(r);
                }
                private static string _Town_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Town;
                }
                private static void _Town_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Town = v;
                }
                private static void _Town_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Town_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    County = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "County",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._County_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._County_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._County_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._County_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._County_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._County_OnValueChanged);
                private static void _County_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._County, sf);
                }
                private static bool _County_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.County_IsReadOnly(ref result);
                    return result;
                }
                private static void _County_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.County_Validate(r);
                }
                private static string _County_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.County;
                }
                private static void _County_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.County = v;
                }
                private static void _County_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.County_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    Postcode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "Postcode",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Postcode_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Postcode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Postcode_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Postcode_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Postcode_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Postcode_OnValueChanged);
                private static void _Postcode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Postcode, sf);
                }
                private static bool _Postcode_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Postcode_IsReadOnly(ref result);
                    return result;
                }
                private static void _Postcode_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Postcode_Validate(r);
                }
                private static string _Postcode_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Postcode;
                }
                private static void _Postcode_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Postcode = v;
                }
                private static void _Postcode_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Postcode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Entry
                    MalePrisonersHeld = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "MalePrisonersHeld",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._MalePrisonersHeld_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._MalePrisonersHeld_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._MalePrisonersHeld_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._MalePrisonersHeld_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._MalePrisonersHeld_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._MalePrisonersHeld_OnValueChanged);
                private static void _MalePrisonersHeld_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._MalePrisonersHeld, sf);
                }
                private static bool _MalePrisonersHeld_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.MalePrisonersHeld_IsReadOnly(ref result);
                    return result;
                }
                private static void _MalePrisonersHeld_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MalePrisonersHeld_Validate(r);
                }
                private static global::System.Nullable<bool> _MalePrisonersHeld_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.MalePrisonersHeld;
                }
                private static void _MalePrisonersHeld_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.MalePrisonersHeld = v;
                }
                private static void _MalePrisonersHeld_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.MalePrisonersHeld_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Entry
                    FemalePrisonersHeld = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "FemalePrisonersHeld",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._FemalePrisonersHeld_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._FemalePrisonersHeld_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._FemalePrisonersHeld_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._FemalePrisonersHeld_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._FemalePrisonersHeld_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._FemalePrisonersHeld_OnValueChanged);
                private static void _FemalePrisonersHeld_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._FemalePrisonersHeld, sf);
                }
                private static bool _FemalePrisonersHeld_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.FemalePrisonersHeld_IsReadOnly(ref result);
                    return result;
                }
                private static void _FemalePrisonersHeld_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FemalePrisonersHeld_Validate(r);
                }
                private static global::System.Nullable<bool> _FemalePrisonersHeld_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.FemalePrisonersHeld;
                }
                private static void _FemalePrisonersHeld_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.FemalePrisonersHeld = v;
                }
                private static void _FemalePrisonersHeld_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.FemalePrisonersHeld_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Entry
                    JuvenilePrisonersHeld = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "JuvenilePrisonersHeld",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._JuvenilePrisonersHeld_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._JuvenilePrisonersHeld_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._JuvenilePrisonersHeld_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._JuvenilePrisonersHeld_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._JuvenilePrisonersHeld_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._JuvenilePrisonersHeld_OnValueChanged);
                private static void _JuvenilePrisonersHeld_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._JuvenilePrisonersHeld, sf);
                }
                private static bool _JuvenilePrisonersHeld_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.JuvenilePrisonersHeld_IsReadOnly(ref result);
                    return result;
                }
                private static void _JuvenilePrisonersHeld_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.JuvenilePrisonersHeld_Validate(r);
                }
                private static global::System.Nullable<bool> _JuvenilePrisonersHeld_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.JuvenilePrisonersHeld;
                }
                private static void _JuvenilePrisonersHeld_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.JuvenilePrisonersHeld = v;
                }
                private static void _JuvenilePrisonersHeld_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.JuvenilePrisonersHeld_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Entry
                    YoungOffendersHeld = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "YoungOffendersHeld",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._YoungOffendersHeld_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._YoungOffendersHeld_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._YoungOffendersHeld_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._YoungOffendersHeld_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._YoungOffendersHeld_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._YoungOffendersHeld_OnValueChanged);
                private static void _YoungOffendersHeld_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._YoungOffendersHeld, sf);
                }
                private static bool _YoungOffendersHeld_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.YoungOffendersHeld_IsReadOnly(ref result);
                    return result;
                }
                private static void _YoungOffendersHeld_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.YoungOffendersHeld_Validate(r);
                }
                private static global::System.Nullable<bool> _YoungOffendersHeld_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.YoungOffendersHeld;
                }
                private static void _YoungOffendersHeld_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.YoungOffendersHeld = v;
                }
                private static void _YoungOffendersHeld_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.YoungOffendersHeld_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Entry
                    AdultPrisonersHeld = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "AdultPrisonersHeld",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._AdultPrisonersHeld_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._AdultPrisonersHeld_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._AdultPrisonersHeld_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._AdultPrisonersHeld_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._AdultPrisonersHeld_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._AdultPrisonersHeld_OnValueChanged);
                private static void _AdultPrisonersHeld_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._AdultPrisonersHeld, sf);
                }
                private static bool _AdultPrisonersHeld_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.AdultPrisonersHeld_IsReadOnly(ref result);
                    return result;
                }
                private static void _AdultPrisonersHeld_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AdultPrisonersHeld_Validate(r);
                }
                private static global::System.Nullable<bool> _AdultPrisonersHeld_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.AdultPrisonersHeld;
                }
                private static void _AdultPrisonersHeld_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.AdultPrisonersHeld = v;
                }
                private static void _AdultPrisonersHeld_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.AdultPrisonersHeld_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    Cat = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "Cat",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Cat_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Cat_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Cat_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Cat_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Cat_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Cat_OnValueChanged);
                private static void _Cat_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Cat, sf);
                }
                private static bool _Cat_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Cat_IsReadOnly(ref result);
                    return result;
                }
                private static void _Cat_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Cat_Validate(r);
                }
                private static string _Cat_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Cat;
                }
                private static void _Cat_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Cat = v;
                }
                private static void _Cat_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Cat_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    Ptype = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "Ptype",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Ptype_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Ptype_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Ptype_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Ptype_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Ptype_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Ptype_OnValueChanged);
                private static void _Ptype_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Ptype, sf);
                }
                private static bool _Ptype_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Ptype_IsReadOnly(ref result);
                    return result;
                }
                private static void _Ptype_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Ptype_Validate(r);
                }
                private static string _Ptype_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Ptype;
                }
                private static void _Ptype_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Ptype = v;
                }
                private static void _Ptype_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Ptype_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    VolunteersNotes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "VolunteersNotes",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._VolunteersNotes_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._VolunteersNotes_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._VolunteersNotes_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._VolunteersNotes_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._VolunteersNotes_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._VolunteersNotes_OnValueChanged);
                private static void _VolunteersNotes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._VolunteersNotes, sf);
                }
                private static bool _VolunteersNotes_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.VolunteersNotes_IsReadOnly(ref result);
                    return result;
                }
                private static void _VolunteersNotes_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VolunteersNotes_Validate(r);
                }
                private static string _VolunteersNotes_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.VolunteersNotes;
                }
                private static void _VolunteersNotes_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.VolunteersNotes = v;
                }
                private static void _VolunteersNotes_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.VolunteersNotes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    Notes = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "Notes",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Notes_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Notes_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Notes_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Notes_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Notes_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Notes_OnValueChanged);
                private static void _Notes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Notes, sf);
                }
                private static bool _Notes_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Notes_IsReadOnly(ref result);
                    return result;
                }
                private static void _Notes_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Notes_Validate(r);
                }
                private static string _Notes_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Notes;
                }
                private static void _Notes_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Notes = v;
                }
                private static void _Notes_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Notes_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    Governor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "Governor",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Governor_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Governor_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Governor_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Governor_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Governor_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Governor_OnValueChanged);
                private static void _Governor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Governor, sf);
                }
                private static bool _Governor_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Governor_IsReadOnly(ref result);
                    return result;
                }
                private static void _Governor_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Governor_Validate(r);
                }
                private static string _Governor_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Governor;
                }
                private static void _Governor_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Governor = v;
                }
                private static void _Governor_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Governor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    Telephone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "Telephone",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Telephone_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Telephone_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Telephone_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Telephone_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Telephone_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Telephone_OnValueChanged);
                private static void _Telephone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Telephone, sf);
                }
                private static bool _Telephone_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Telephone_IsReadOnly(ref result);
                    return result;
                }
                private static void _Telephone_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Telephone_Validate(r);
                }
                private static string _Telephone_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Telephone;
                }
                private static void _Telephone_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Telephone = v;
                }
                private static void _Telephone_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Telephone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    Tag = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "Tag",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Tag_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Tag_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Tag_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Tag_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Tag_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Tag_OnValueChanged);
                private static void _Tag_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Tag, sf);
                }
                private static bool _Tag_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Tag_IsReadOnly(ref result);
                    return result;
                }
                private static void _Tag_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Tag_Validate(r);
                }
                private static string _Tag_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Tag;
                }
                private static void _Tag_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Tag = v;
                }
                private static void _Tag_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Tag_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Entry
                    InclInNLAddressList = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "InclInNLAddressList",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._InclInNLAddressList_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._InclInNLAddressList_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._InclInNLAddressList_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._InclInNLAddressList_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._InclInNLAddressList_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._InclInNLAddressList_OnValueChanged);
                private static void _InclInNLAddressList_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._InclInNLAddressList, sf);
                }
                private static bool _InclInNLAddressList_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.InclInNLAddressList_IsReadOnly(ref result);
                    return result;
                }
                private static void _InclInNLAddressList_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.InclInNLAddressList_Validate(r);
                }
                private static global::System.Nullable<bool> _InclInNLAddressList_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.InclInNLAddressList;
                }
                private static void _InclInNLAddressList_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.InclInNLAddressList = v;
                }
                private static void _InclInNLAddressList_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.InclInNLAddressList_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    DesignationNewsletter = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "DesignationNewsletter",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._DesignationNewsletter_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._DesignationNewsletter_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._DesignationNewsletter_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._DesignationNewsletter_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._DesignationNewsletter_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._DesignationNewsletter_OnValueChanged);
                private static void _DesignationNewsletter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._DesignationNewsletter, sf);
                }
                private static bool _DesignationNewsletter_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.DesignationNewsletter_IsReadOnly(ref result);
                    return result;
                }
                private static void _DesignationNewsletter_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DesignationNewsletter_Validate(r);
                }
                private static string _DesignationNewsletter_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.DesignationNewsletter;
                }
                private static void _DesignationNewsletter_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DesignationNewsletter = v;
                }
                private static void _DesignationNewsletter_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.DesignationNewsletter_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    ContactForNewsletter = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "ContactForNewsletter",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactForNewsletter_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactForNewsletter_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactForNewsletter_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactForNewsletter_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactForNewsletter_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactForNewsletter_OnValueChanged);
                private static void _ContactForNewsletter_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactForNewsletter, sf);
                }
                private static bool _ContactForNewsletter_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.ContactForNewsletter_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactForNewsletter_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactForNewsletter_Validate(r);
                }
                private static string _ContactForNewsletter_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactForNewsletter;
                }
                private static void _ContactForNewsletter_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContactForNewsletter = v;
                }
                private static void _ContactForNewsletter_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.ContactForNewsletter_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    ContactPosition = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "ContactPosition",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactPosition_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactPosition_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactPosition_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactPosition_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactPosition_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactPosition_OnValueChanged);
                private static void _ContactPosition_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactPosition, sf);
                }
                private static bool _ContactPosition_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.ContactPosition_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactPosition_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactPosition_Validate(r);
                }
                private static string _ContactPosition_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactPosition;
                }
                private static void _ContactPosition_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContactPosition = v;
                }
                private static void _ContactPosition_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.ContactPosition_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    ContactPhone = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "ContactPhone",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactPhone_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactPhone_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactPhone_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactPhone_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactPhone_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactPhone_OnValueChanged);
                private static void _ContactPhone_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactPhone, sf);
                }
                private static bool _ContactPhone_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.ContactPhone_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactPhone_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactPhone_Validate(r);
                }
                private static string _ContactPhone_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactPhone;
                }
                private static void _ContactPhone_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContactPhone = v;
                }
                private static void _ContactPhone_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.ContactPhone_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry
                    ContactFax = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Entry(
                        "ContactFax",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactFax_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactFax_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactFax_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactFax_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactFax_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._ContactFax_OnValueChanged);
                private static void _ContactFax_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._ContactFax, sf);
                }
                private static bool _ContactFax_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.ContactFax_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContactFax_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContactFax_Validate(r);
                }
                private static string _ContactFax_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.ContactFax;
                }
                private static void _ContactFax_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ContactFax = v;
                }
                private static void _ContactFax_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.ContactFax_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.c_Class>.Entry
                    Classes = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.c_Class>.Entry(
                        "Classes",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Classes_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Classes_GetReferencedEntities,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Classes_GetEntityCollection);
                private static void _Classes_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.c_Class>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Classes, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Class> _Classes_GetReferencedEntities(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.c_Class, global::LightSwitchApplication.c_Class.DetailsClass>(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Classes, ref d._Classes);
                }
                private static global::System.Collections.IEnumerable _Classes_GetEntityCollection(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Classes;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.Contact>.Entry
                    Contacts = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.Contact>.Entry(
                        "Contacts",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Contacts_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Contacts_GetReferencedEntities,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Contacts_GetEntityCollection);
                private static void _Contacts_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.Contact>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Contacts, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Contact> _Contacts_GetReferencedEntities(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Contact, global::LightSwitchApplication.Contact.DetailsClass>(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Contacts, ref d._Contacts);
                }
                private static global::System.Collections.IEnumerable _Contacts_GetEntityCollection(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Contacts;
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.Country>.Entry
                    Country1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.Country>.Entry(
                        "Country1",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Country1_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Country1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Country1_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Country1_GetCoreImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Country1_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Country1_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Country1_Refresh,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._Country1_OnValueChanged);
                private static void _Country1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.Country>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._Country1, sf);
                }
                private static bool _Country1_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.Country1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Country1_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Country1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Country1_GetCoreImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.Country1;
                }
                private static global::LightSwitchApplication.Country _Country1_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Country, global::LightSwitchApplication.Country.DetailsClass>(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Country1, ref d._Country1);
                }
                private static void _Country1_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, global::LightSwitchApplication.Country v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Country1, ref d._Country1, (i, ev) => i.Country1 = ev, v);
                }
                private static void _Country1_Refresh(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.Country1, ref d._Country1);
                }
                private static void _Country1_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.Country1_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.LocationType>.Entry
                    LocationType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.LocationType>.Entry(
                        "LocationType",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._LocationType_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._LocationType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._LocationType_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._LocationType_GetCoreImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._LocationType_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._LocationType_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._LocationType_Refresh,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._LocationType_OnValueChanged);
                private static void _LocationType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.LocationType>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._LocationType, sf);
                }
                private static bool _LocationType_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.LocationType_IsReadOnly(ref result);
                    return result;
                }
                private static void _LocationType_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LocationType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _LocationType_GetCoreImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.LocationType;
                }
                private static global::LightSwitchApplication.LocationType _LocationType_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.LocationType, global::LightSwitchApplication.LocationType.DetailsClass>(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.LocationType, ref d._LocationType);
                }
                private static void _LocationType_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, global::LightSwitchApplication.LocationType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.LocationType, ref d._LocationType, (i, ev) => i.LocationType = ev, v);
                }
                private static void _LocationType_Refresh(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.LocationType, ref d._LocationType);
                }
                private static void _LocationType_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.LocationType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.NLAddressOrderType>.Entry
                    NLAddressOrderType = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.NLAddressOrderType>.Entry(
                        "NLAddressOrderType",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._NLAddressOrderType_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._NLAddressOrderType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._NLAddressOrderType_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._NLAddressOrderType_GetCoreImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._NLAddressOrderType_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._NLAddressOrderType_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._NLAddressOrderType_Refresh,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._NLAddressOrderType_OnValueChanged);
                private static void _NLAddressOrderType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.NLAddressOrderType>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._NLAddressOrderType, sf);
                }
                private static bool _NLAddressOrderType_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.NLAddressOrderType_IsReadOnly(ref result);
                    return result;
                }
                private static void _NLAddressOrderType_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NLAddressOrderType_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _NLAddressOrderType_GetCoreImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.NLAddressOrderType;
                }
                private static global::LightSwitchApplication.NLAddressOrderType _NLAddressOrderType_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.NLAddressOrderType, global::LightSwitchApplication.NLAddressOrderType.DetailsClass>(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.NLAddressOrderType, ref d._NLAddressOrderType);
                }
                private static void _NLAddressOrderType_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, global::LightSwitchApplication.NLAddressOrderType v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.NLAddressOrderType, ref d._NLAddressOrderType, (i, ev) => i.NLAddressOrderType = ev, v);
                }
                private static void _NLAddressOrderType_Refresh(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.NLAddressOrderType, ref d._NLAddressOrderType);
                }
                private static void _NLAddressOrderType_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.NLAddressOrderType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.PrisonSex>.Entry
                    PrisonSex = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.PrisonSex>.Entry(
                        "PrisonSex",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._PrisonSex_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._PrisonSex_ComputeIsReadOnly,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._PrisonSex_Validate,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._PrisonSex_GetCoreImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._PrisonSex_GetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._PrisonSex_SetImplementationValue,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._PrisonSex_Refresh,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._PrisonSex_OnValueChanged);
                private static void _PrisonSex_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.PrisonSex>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._PrisonSex, sf);
                }
                private static bool _PrisonSex_ComputeIsReadOnly(global::LightSwitchApplication.Prison e)
                {
                    bool result = false;
                    e.PrisonSex_IsReadOnly(ref result);
                    return result;
                }
                private static void _PrisonSex_Validate(global::LightSwitchApplication.Prison e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PrisonSex_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _PrisonSex_GetCoreImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.PrisonSex;
                }
                private static global::LightSwitchApplication.PrisonSex _PrisonSex_GetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.PrisonSex, global::LightSwitchApplication.PrisonSex.DetailsClass>(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.PrisonSex, ref d._PrisonSex);
                }
                private static void _PrisonSex_SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass d, global::LightSwitchApplication.PrisonSex v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.PrisonSex, ref d._PrisonSex, (i, ev) => i.PrisonSex = ev, v);
                }
                private static void _PrisonSex_Refresh(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.PrisonSex, ref d._PrisonSex);
                }
                private static void _PrisonSex_OnValueChanged(global::LightSwitchApplication.Prison e)
                {
                    e.PrisonSex_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.WorkshopPrison>.Entry
                    WorkshopPrisons = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.WorkshopPrison>.Entry(
                        "WorkshopPrisons",
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._WorkshopPrisons_Stub,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._WorkshopPrisons_GetReferencedEntities,
                        global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties._WorkshopPrisons_GetEntityCollection);
                private static void _WorkshopPrisons_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Prison.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.WorkshopPrison>.Data> c, global::LightSwitchApplication.Prison.DetailsClass d, object sf)
                {
                    c(d, ref d._WorkshopPrisons, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.WorkshopPrison> _WorkshopPrisons_GetReferencedEntities(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.WorkshopPrison, global::LightSwitchApplication.WorkshopPrison.DetailsClass>(global::LightSwitchApplication.Prison.DetailsClass.PropertySetProperties.WorkshopPrisons, ref d._WorkshopPrisons);
                }
                private static global::System.Collections.IEnumerable _WorkshopPrisons_GetEntityCollection(global::LightSwitchApplication.Prison.DetailsClass d)
                {
                    return d.ImplementationEntity.WorkshopPrisons;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _MailName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _Address1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _Address2;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _Address3;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _Town;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _County;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _Postcode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Data _MalePrisonersHeld;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Data _FemalePrisonersHeld;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Data _JuvenilePrisonersHeld;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Data _YoungOffendersHeld;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Data _AdultPrisonersHeld;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _Cat;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _Ptype;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _VolunteersNotes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _Notes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _Governor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _Telephone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _Tag;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::System.Nullable<bool>>.Data _InclInNLAddressList;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _DesignationNewsletter;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _ContactForNewsletter;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _ContactPosition;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _ContactPhone;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, string>.Data _ContactFax;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.c_Class>.Data _Classes;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.Contact>.Data _Contacts;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.Country>.Data _Country1;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.LocationType>.Data _LocationType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.NLAddressOrderType>.Data _NLAddressOrderType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.PrisonSex>.Data _PrisonSex;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Prison, global::LightSwitchApplication.Prison.DetailsClass, global::LightSwitchApplication.WorkshopPrison>.Data _WorkshopPrisons;
            
        }
    
        #endregion
    }
    
    #endregion
}
